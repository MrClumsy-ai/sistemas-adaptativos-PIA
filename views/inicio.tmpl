{{ define "inicio" }}
<!doctype html>
<html lang="en">
  <head>
    <title>Prediccion Bitcoin</title>
    {{ template "librerias" .}}
    {{ template "meta" .}}
    <style>
      .scroll-vertical {
        height: 150px;
        overflow: hidden;
        position: relative;
        border: 1px solid #ccc;
        margin-top: 1rem;
      }

      .scroll-vertical img {
        position: absolute;
        width: 100%;
        animation: scrollImg 10s linear infinite;
      }

      @keyframes scrollImg {
        0% { top: 100%; }
        100% { top: -100%; }
      }

      .carousel img {
        max-height: 200px;
        object-fit: cover;
      }
    </style>
  </head>
  <body >
    <div class="container">
      <header class="main-header">Pascal</header>
      <h2 class="subtitle">Dashboard Bitcoin</h2>
      <main class="dashboard">
        <section class="main-chart">
        <canvas id="miGraficoVelas"></canvas>
        <div id="dashboardCarousel" class="carousel slide mt-4" data-bs-ride="carousel">
            <div class="carousel-inner">
              <div class="carousel-item active">
                <img src="assets/img/dash1.jpg" class="d-block w-100" alt="Slide 1">
              </div>
              <div class="carousel-item">
                <img src="assets/img/dash2.jpg" class="d-block w-100" alt="Slide 2">
              </div>
              <div class="carousel-item">
                <img src="assets/img/dash3.jpg" class="d-block w-100" alt="Slide 3">
              </div>
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#dashboardCarousel" data-bs-slide="prev">
              <span class="carousel-control-prev-icon"></span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#dashboardCarousel" data-bs-slide="next">
              <span class="carousel-control-next-icon"></span>
            </button>
          </div>
          <script>
            // Datos de ejemplo para Bitcoin
            const datosBTC = [
              {t: new Date('2024-01-01').getTime(), o: 42000, h: 43800, l: 41500, c: 43200},
              {t: new Date('2024-01-02').getTime(), o: 43200, h: 44500, l: 42800, c: 44000},
              {t: new Date('2024-01-03').getTime(), o: 44000, h: 45200, l: 43500, c: 43500},
              {t: new Date('2024-01-04').getTime(), o: 43500, h: 44200, l: 42800, c: 43800},
              {t: new Date('2024-01-05').getTime(), o: 43800, h: 44800, l: 43200, c: 44500},
            ];

            // Configuraci칩n del gr치fico
            const config = {
              type: 'candlestick',
              data: {
                datasets: [{
                  label: 'Precio BTC/USD',
                  data: datosBTC,
                  color: {
                    up: '#4CAF50',
                    down: '#FF5252',
                    unchanged: '#2196F3'
                  },
                  borderColor: '#000',
                }]
              },
              options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                  x: {
                    type: 'time',
                    time: {
                      unit: 'day',
                      displayFormats: { day: 'dd MMM' }
                    },
                    ticks: { color: '#333' }
                  },
                  y: {
                    ticks: { 
                      color: '#333',
                      callback: (value) => '$' + value.toLocaleString()
                    }
                  }
                },
                plugins: {
                  legend: { display: false },
                  tooltip: {
                    callbacks: {
                      label: (ctx) => {
                        const item = ctx.raw;
                        return [
                          `Apertura: $${item.o}`,
                          `M치ximo: $${item.h}`,
                          `M칤nimo: $${item.l}`,
                          `Cierre: $${item.c}`
                        ];
                      }
                    }
                  }
                }
              }
            };

            // Inicializar el gr치fico
            const ctx = document.getElementById('miGraficoVelas').getContext('2d');
            new Chart(ctx, config);
          </script>
        </section>

        <aside class="side-panel">
          <div class="box box-top">
          <h3>游늶 Datos en Tiempo Real</h3>
            <table class="data-table" id="topTable">
              <thead>
                <tr>
                  <th>Hora</th>
                  <th>Par</th>
                  <th>Valor</th>
                </tr>
              </thead>
              <tbody id="topTableBody">
                <tr class="loading">
                  <td colspan="3">Cargando datos...</td>
                </tr>
              </tbody>
            </table>

            <!-- 游닆 Imagen con desplazamiento vertical en box-top -->
            <div class="scroll-vertical">
              <img src="assets/img/top-scroll.jpg" alt="Scroll Top">
            </div>
          </div>
          <div class="box box-bottom">
           <h3>游늵 Hist칩rico Reciente</h3>
            <table class="data-table" id="bottomTable">
              <thead>
                <tr>
                  <th>Fecha</th>
                  <th>Apertura</th>
                  <th>Cierre</th>
                </tr>
              </thead>
              <tbody id="bottomTableBody">
                <tr class="loading">
                  <td colspan="3">Cargando datos...</td>
                </tr>
              </tbody>
            </table>
            <!-- 游닆 Imagen con desplazamiento vertical en box-bottom -->
            <div class="scroll-vertical">
              <img src="assets/img/bottom-scroll.jpg" alt="Scroll Bottom">
            </div>
        </aside>
      </main>
    </div>
  </body>
</html>
{{ end }}

<script>
      // Sistema de actualizaci칩n
      function actualizarTablas() {
        // L칩gica para actualizar topTableBody
        // fetch().then().then(data => { ... })
        
        // Ejemplo b치sico de actualizaci칩n
        const ahora = new Date().toLocaleTimeString();
        
        // Top Table (Ejemplo est치tico)
        document.getElementById('topTableBody').innerHTML = `
          <tr>
            <td>${ahora}</td>
            <td>BTC/USD</td>
            <td>${(Math.random() * 1000).toFixed(2)}</td>
          </tr>
        ` + document.getElementById('topTableBody').innerHTML;
        
        // Bottom Table (Ejemplo est치tico)
        document.getElementById('bottomTableBody').innerHTML = `
          <tr>
            <td>${new Date().toLocaleDateString()}</td>
            <td>${(Math.random() * 1000).toFixed(2)}</td>
            <td>${(Math.random() * 1000).toFixed(2)}</td>
          </tr>
        ` + document.getElementById('bottomTableBody').innerHTML;
      }

      // Actualizar cada 5 segundos (5000 ms)
      setInterval(actualizarTablas, 5000);
      // Ejecutar primera vez
      actualizarTablas();
</script>
